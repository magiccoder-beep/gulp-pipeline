{"version":3,"sources":["components/_video.scss","components.css","_tools/_animations.scss","common/_breakpoints.scss"],"names":[],"mappings":"AAEQ;ECAA,eAAA;AAAR;ADKgB;EEad,sBAAA;EACA,qDAAA;UAAA,6CAAA;EFKM,qCAAA;EAKA,6BAAA;ACpBR;ADKoB;ECDA,uDAAA;UAAA,+CAAA;EDOhB,6BAAA;UAAA,qBAAA;ACPJ;ADaQ;EAEA,eAAA;EACA,MAAA;EACA,OAAA;EACA,QAAA;EAEA,WAAA;EAEA,YAAA;EAGA,oBAAA;EAAA,oBAAA;EAAA,aAAA;ECTA,4BAAA;EAAA,6BAAA;MAAA,0BAAA;UAAA,sBAAA;EEuBO,yBAAA;MAAA,sBAAA;UAAA,mBAAA;EHhCX,wBAAA;MAAA,qBAAA;UAAA,uBAAA;ECaI,aAAA;EDYJ,kBAAA;EACI,UAAA;EAGA,cAAA;ACpBR;ADwCY;EA3CJ;IA2BA,oCAAA;ECpBN;AACF;AD4BQ;EACR,WAAA;EAAA,eAAA;ECdQ,iBAAA;EDkBA,kBAAA;EAEI,oBAAA;EAAA,oBAAA;EAAA,aAAA;EACA,4BAAA;EAAA,6BAAA;MAAA,0BAAA;UAAA,sBAAA;AC5BZ;ADoCY;ECjBJ,YAAA;EETO,kBAAA;EFWf;wCAAA;EDqBgB,YAAA;ACnChB;AAkBQ;EDoBI,WAAA;EACI,YAAA;EACA,mBAAA;ACnChB;AAqBQ;EACI,eAAA;EACA,MAAA;EACA,QAAA;EACA,aAAA;EACA,iBAAA;AAnBZ;ADQY;ECMJ;IAQQ,YAAA;IACA,iBAAA;EAlBd;AACF;AAoBY;EACI,WAAA;EACA,YAAA;AAlBhB;AACA,yrBAAyrB","file":"components.css","sourcesContent":[".video {\r\n    &__trigger {\r\n        cursor: pointer;\r\n\r\n        .icon {\r\n            &__play {\r\n                border-radius: 50% 50%;\r\n                box-shadow: 0px 0px 10px 0px rgba(0,0,0,0);\r\n                @include transition(all, 0.2s, ease-out);\r\n            }\r\n        }\r\n\r\n        &:hover {\r\n            .icon {\r\n                &__play {\r\n                    box-shadow: 0px 0px 10px 0px rgba(0,0,0,0.5);\r\n                    transform: scale(1.2);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    &__overlay {\r\n        position: fixed;\r\n        top: 0;\r\n        left: 0;\r\n        right: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: center;\r\n\r\n        padding: 80px;\r\n\r\n        visibility: hidden;\r\n        opacity: 0;\r\n\r\n        z-index: 99995;\r\n\r\n        @include respond-until(desktop) {\r\n            padding: var(--padding-sides-mobile);\r\n         }\r\n    }\r\n\r\n    &__inner {\r\n        width: 100%;\r\n        max-width: 100%;\r\n\r\n        max-width: 1400px;\r\n        aspect-ratio: 16 / 9;\r\n\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        \r\n    }\r\n\r\n    &__container {\r\n\r\n        \r\n        font-size: 0;\r\n        position: relative;\r\n/*         top: 50%;\r\n        transform: translateY(-50%); */\r\n        margin: auto;\r\n\r\n        iframe {\r\n            width: 100%;\r\n            height: 100%;\r\n            border-radius: 16px;\r\n        }\r\n    }\r\n\r\n    .btn {\r\n        &__wrapper {\r\n            position: fixed;\r\n            top: 0;\r\n            right: 0;\r\n            padding: 40px;\r\n            padding-top: 36px;\r\n\r\n            @include respond-until(tablet) {\r\n                right: -17px;\r\n                padding-top: 65px;\r\n             }\r\n\r\n            .btn {\r\n                width: 51px;\r\n                height: 51px;\r\n            }\r\n        }\r\n    }\r\n}",null,"@mixin basic-transition($properties: (all), $duration: $transition-duration, $delay: null, $easing: $easing) {\r\n    $value: null;\r\n  \r\n    @each $prop in $properties {\r\n      $prop-value: append((), $prop, space);\r\n      $prop-value: append($prop-value, $duration, space);\r\n  \r\n      @if $delay != null {\r\n        $prop-value: append($prop-value, $delay, space);\r\n      }\r\n  \r\n      $prop-value: append($prop-value, $easing, space);\r\n  \r\n      $value: append($value, $prop-value, comma);\r\n    }\r\n  \r\n    transition: $value;\r\n  }\r\n\r\n@mixin transition($transition-property, $transition-time, $method) {\r\n  -webkit-transition: $transition-property $transition-time $method;\r\n  -moz-transition: $transition-property $transition-time $method;\r\n  -ms-transition: $transition-property $transition-time $method;\r\n  -o-transition: $transition-property $transition-time $method;\r\n  transition: $transition-property $transition-time $method;\r\n}","$breakpoints: (\r\n    ('mobile', 440px),\r\n    ('phablet', 640px),\r\n    ('tablet', 768px),\r\n    ('desktop', 1024px),\r\n    ('wide', 1280px),\r\n    ('grid_max', 1440px),\r\n    ('hd', 1920px),\r\n    ('n_1900', 1900px),\r\n    ('n_1800', 1800px),\r\n    ('n_1700', 1700px),\r\n    ('n_1600', 1600px),\r\n    ('n_1500', 1500px),\r\n    ('n_1400', 1400px),\r\n    ('n_1300', 1300px),\r\n    ('n_1200', 1200px),\r\n    ('n_1100', 1100px),\r\n    ('n_1000', 1000px),\r\n    ('n_900', 900px)\r\n);\r\n\r\n@mixin respond-from($media) {\r\n     @each $breakpoint in $breakpoints {\r\n          @if $media == nth($breakpoint, 1) {\r\n               @media (min-width: #{nth($breakpoint, 2)})  { @content; }\r\n          }\r\n     }\r\n}\r\n\r\n@mixin respond-to($media) {\r\n    @for $i from 1 through length($breakpoints) {\r\n        $breakpoint: nth($breakpoints, $i);\r\n        $name: nth($breakpoint, 1);\r\n        $value: nth($breakpoint, 2);\r\n \r\n        @if $media == $name {\r\n            @if $i == 1 {\r\n                @media (max-width: #{$value})  { @content; }\r\n            } @else if $i == length($breakpoints) {\r\n                @media (min-width: #{$value})  { @content; }\r\n            } @else {\r\n                $next_breakpoint: nth($breakpoints, $i + 1);\r\n                $next_name: nth($next_breakpoint, 1);\r\n                $next_value: nth($next_breakpoint, 2);\r\n \r\n                @media (min-width: #{$value}) and (max-width: #{$next_value - 1px}) { @content; }\r\n            }\r\n        }\r\n   }\r\n}\r\n\r\n@mixin respond-until($media) {\r\n     @each $breakpoint in $breakpoints {\r\n          @if $media == nth($breakpoint, 1) {\r\n               @media (max-width: #{nth($breakpoint, 2)})  { @content; }\r\n          }\r\n     }\r\n}\r\n\r\n@mixin respond-until-height($media) {\r\n     @each $breakpoint in $breakpointsHeight {\r\n          @if $media == nth($breakpoint, 1) {\r\n               @media (max-height: #{nth($breakpoint, 2)})  { @content; }\r\n          }\r\n     }\r\n}\r\n\r\n// Usage\r\n// .my-header {\r\n//     // width\r\n//     @include respond-until(sm) {\r\n//         background: red;\r\n//     }\r\n//     @include respond-to(sm) {\r\n//         background: orange;\r\n//     }\r\n//     @include respond-from(m) {\r\n//         background: green;\r\n//     }\r\n\r\n//     //height\r\n//     @include respond-until-height(m) {\r\n//       background: pink;\r\n//     }\r\n// }\r\n"]}