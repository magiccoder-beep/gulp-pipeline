$breakpoints: (
    ('mobile', 440px),
    ('phablet', 640px),
    ('tablet', 768px),
    ('desktop', 1024px),
    ('wide', 1280px),
    ('grid_max', 1440px),
    ('hd', 1920px),
    ('n_1900', 1900px),
    ('n_1800', 1800px),
    ('n_1700', 1700px),
    ('n_1600', 1600px),
    ('n_1500', 1500px),
    ('n_1400', 1400px),
    ('n_1300', 1300px),
    ('n_1200', 1200px),
    ('n_1100', 1100px),
    ('n_1000', 1000px),
    ('n_900', 900px)
);

@mixin respond-from($media) {
     @each $breakpoint in $breakpoints {
          @if $media == nth($breakpoint, 1) {
               @media (min-width: #{nth($breakpoint, 2)})  { @content; }
          }
     }
}

@mixin respond-to($media) {
    @for $i from 1 through length($breakpoints) {
        $breakpoint: nth($breakpoints, $i);
        $name: nth($breakpoint, 1);
        $value: nth($breakpoint, 2);
 
        @if $media == $name {
            @if $i == 1 {
                @media (max-width: #{$value})  { @content; }
            } @else if $i == length($breakpoints) {
                @media (min-width: #{$value})  { @content; }
            } @else {
                $next_breakpoint: nth($breakpoints, $i + 1);
                $next_name: nth($next_breakpoint, 1);
                $next_value: nth($next_breakpoint, 2);
 
                @media (min-width: #{$value}) and (max-width: #{$next_value - 1px}) { @content; }
            }
        }
   }
}

@mixin respond-until($media) {
     @each $breakpoint in $breakpoints {
          @if $media == nth($breakpoint, 1) {
               @media (max-width: #{nth($breakpoint, 2)})  { @content; }
          }
     }
}

@mixin respond-until-height($media) {
     @each $breakpoint in $breakpointsHeight {
          @if $media == nth($breakpoint, 1) {
               @media (max-height: #{nth($breakpoint, 2)})  { @content; }
          }
     }
}

// Usage
// .my-header {
//     // width
//     @include respond-until(sm) {
//         background: red;
//     }
//     @include respond-to(sm) {
//         background: orange;
//     }
//     @include respond-from(m) {
//         background: green;
//     }

//     //height
//     @include respond-until-height(m) {
//       background: pink;
//     }
// }
